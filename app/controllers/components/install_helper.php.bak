<?php
/* SVN FILE: $Id: install_helper.php,v 1.2 2006/06/27 17:25:26 zoeshum Exp $ */
/*
 * InstallHelper Component 
 *
 * @author      gwoo <gwoo@rd11.com>
 * @version     0.10.5.1797
 * @license		OPPL
 *
 */
class InstallHelperComponent
{
	function runInsertDataStructure($dbConfig) 
	{
		
		$basicSQLFile = "../config/sql/ipeer.sql";
		$samplesFile = "../config/sql/ipeer_samples_data.sql";
		

		
		//Install database with sample data
		$dataOption = $dbConfig['data_setup_option'];
		if ($dataOption == 'A') {
  		//Install database with basic structure
		  $dbConfig['filename'] = $basicSQLFile;
  		$runQuery = $this->dbSource($dbConfig);
		} 
		else if ($dataOption == 'B') {
  		//Install database with sample data structure
		  $dbConfig['filename'] = $samplesFile;
  		$runQuery = $this->dbSource($dbConfig);		  
		}
		
		return $runQuery; 
	}

	#
	# Read and execute SQL commands from a file
	#
	function dbSource($dbConfig) {

		$executeStaus = false;
	  $fname = $dbConfig['filename'];
	  
    //connect to the server
    $mysql = mysql_connect($dbConfig['host_name'], $dbConfig['db_user'], $dbConfig['db_password']);
    if(!$mysql) {
      die('Could not connect: ' . mysql_error());
      return($error);
    } 
    else {
      //Open the database
      $mysqldb = mysql_select_db($dbConfig['db_name']);
      if (!$mysqldb) {
        //TODO create database
        //return($error);
      }	  
  		
  		$fp = fopen( $fname, "r" );
  		if ( false === $fp ) {
  			//print "Could not open \"{$fname}\".\n";
  			return false;
  		}
  	
  		$cmd = "";
  		$done = false;
  	
  		while ( ! feof( $fp ) ) {
  			$line = trim( fgets( $fp, 1024 ) );
  			$sl = strlen( $line ) - 1;
  	
  			if ( $sl < 0 ) { continue; }
  			if ( "-" == $line{0} && "-" == $line{1} ) { continue; }
  	
  			if ( ";" == $line{$sl} ) {
  				$done = true;
  				$line = substr( $line, 0, $sl );
  			}
  	
  			if ( "" != $cmd ) { $cmd .= " "; }
  			$cmd .= $line;
  	
  			if ( $done ) {
  				//echo $cmd . ";<br /><br /><br />";
  				$result = mysql_query($cmd, $mysql);
          if (!$result)
          {
          $error = "Cannot run query";
          return $error;
          }
  				//if ($this->execute($cmd)) {
  				//	return false;
  				//}
  				$cmd = "";
  				$done = false;
  			}
  		}
  		fclose( $fp );
  		mysql_query("COMMIT");
  		mysql_close($mysql);
  	}
		return true;
		
	}    	
	
	function updateSystemParameters($data) 
  {
  	$this->SysParameter =& new SysParameter;
  	$superAdmin = null;
  	
		if (!empty($data)) {
			foreach($data['SysParameter'] as $key => $value){
				$tmpSysParam = $this->SysParameter->findParameter($key);
				$tmpSysParam['SysParameter']['parameter_value'] = $value;
				$this->SysParameter->save($tmpSysParam);
				
				if ($key == 'system.super_admin') {
					$superAdmin = $value;
				}
			}
    }  
echo $superAdmin;    
   	return $superAdmin;
  }			
}